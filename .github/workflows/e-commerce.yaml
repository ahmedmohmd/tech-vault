name: Tech Vault CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Dependencies
        run: npm install

  lint:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Dependencies
        run: npm install

      - name: Run Linter
        run: npm run lint

  test:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Build the project
        run: npm run build

  # docker-build:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Log in to Docker Hub
  #       run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

  #     - name: Build Docker image
  #       run: docker build -t your-dockerhub-username/ecommerce-app:${{ github.sha }} .

  #     - name: Push Docker image
  #       run: docker push your-dockerhub-username/ecommerce-app:${{ github.sha }}

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: docker-build
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: SSH to server and deploy
  #       uses: appleboy/ssh-action@v0.1.5
  #       with:
  #         host: ${{ secrets.SERVER_HOST }}
  #         username: ${{ secrets.SERVER_USERNAME }}
  #         key: ${{ secrets.SERVER_SSH_KEY }}
  #         script: |
  #           docker pull your-dockerhub-username/ecommerce-app:${{ github.sha }}
  #           docker stop ecommerce-app || true
  #           docker rm ecommerce-app || true
  #           docker run -d -p 80:8000 --name ecommerce-app your-dockerhub-username/ecommerce-app:${{ github.sha }}
